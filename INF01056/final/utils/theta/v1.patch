--- theta.cpp	2017-03-10 08:31:45.685065770 -0300
+++ thetav1.cpp	2016-08-05 03:53:55.000000000 -0300
@@ -1,7 +1,4 @@
-/* -- theta.cpp -- */
-
 #include <iostream>
-#include <fstream>
 #include <string>
 #include <sstream>
 #include <vector>
@@ -11,6 +8,7 @@
 
 using namespace std;
 
+const int undef = numeric_limits<int>::max();
 const int inf_min = numeric_limits<int>::min();
 
 class Job {
@@ -44,31 +42,21 @@
   int p = 0;
 
   string line = "", dummy;
-  string filename;
   char ac;
   int a, b, c;
 
-    if (argc == 2) filename = argv[1];
-  else {
-    cerr << "usage: bap FILE" << endl;
-    terminate();
-  }
-
-  ifstream ifile;
-
-  ifile.open(filename);
-  
   while (line.substr(0,3) != "n p")
-    getline (ifile, line);
+    getline (cin, line);
   stringstream linestr(line);
   linestr >> dummy >> dummy >> n >> p;
 
   vector<Job> J;
   J.push_back(Job());
 
-  
+  //chrono::system_clock::time_point t0 = chrono::system_clock::now();
+
   for (int i = 1; i <= n; i++) {
-    getline (ifile, line);
+    getline (cin, line);
     if (line.substr(0,2) == "j ") {
       stringstream job(line);
       job >> ac >> a >> b >> c;
@@ -100,12 +88,19 @@
   const int T = theta.size();
 
   cout << T << endl;
-  
-  /* TODO
-  for (int i = 0; i < T; i++)
-    cout << "Theta[" << i << "] == " << theta.at(i) << endl;
-*/
-  
+
+  int W0[T][T];
+
+  //chrono::system_clock::time_point t1 = chrono::system_clock::now();
+
+  for (int s = 0; s < T; s++)
+    for (int e = 0; e < T; e++)
+      if ( (e < s) || (e == 0) ) W0[s][e] = undef;
+      else W0[s][e] = 0;
+
+  //cout << "Time spent initializing table = " << chrono::duration_cast<chrono::milliseconds>(chrono::system_clock::now() - t1).count() << endl;
+  //cout << "Total time spent since t0  = " << chrono::duration_cast<chrono::milliseconds>(chrono::system_clock::now() - t0).count() << endl;
+
   return 0;
 
 }
